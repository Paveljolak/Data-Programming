---
title: "Data Programming"
subtitle: "Homework 3"
author: "Pavel"
date: May 7, 2024
format: 
  html:
    embed-resources: true
execute: 
  warning: false
  messages: false
  echo: true
  error: true
---




## Solutions

Submit a **.html** file created using Quarto via e-classroom. A sample is attached. Display all code (packages,input) and output.


## Task 1
### Packages
```{r}
library(ggplot2)
library(janitor)
library(lubridate)
library(tidyverse)
library(dplyr)

```


### Set up beaver1 data

```{r}

b1 <- beaver1
  
# DATE: 
b1$day <- as.Date(b1$day, origin = "1990-01-01") 

b1$day <- b1$day - 1

b1$day <- as.Date(b1$day)

b1$day <- as.Date(b1$day, format = "%m-%d")

b1$day <- format(b1$day, "%b %d")


# TIME:
b1$time <- as.character(b1$time)


b1$time <- stringr::str_pad(b1$time, width = 4, side = "left", pad = "0")


b1$time <- paste0(substr(b1$time, 1, 2), ":", substr(b1$time, 3, 4))



b1$datetime <- as.POSIXct(paste("1990", b1$day, b1$time), format = "%Y %b %d %H:%M")
head(b1)

ggplot(b1, aes(x = datetime, y = temp, group = 1)) +
  geom_line(color = "red") +
  scale_x_datetime(date_breaks = "5 hours", date_labels = "%b %d %H:%M") +
  scale_y_continuous(breaks = seq(floor(min(b1$temp)), ceiling(max(b1$temp)), by = 0.5)) +
  labs(x = "", y = "Temperature (°C)", title = "Temperature of Beavers Over Time") 

```




### Set up beaver2 data
Same as beaver1
```{r}
b2 <- beaver2

# DATE: 
b2$day <- as.Date(b2$day, origin = "1990-01-01") 

b2$day <- b2$day - 1

b2$day <- as.Date(b2$day)

b2$day <- as.Date(b2$day, format = "%m-%d")

b2$day <- format(b2$day, "%b %d")

# TIME:
b2$time <- as.character(b2$time)


b2$time <- stringr::str_pad(b2$time, width = 4, side = "left", pad = "0")


b2$time <- paste0(substr(b2$time, 1, 2), ":", substr(b2$time, 3, 4))


# PLOT B2:
b2$datetime <- as.POSIXct(paste("1990", b2$day, b2$time), format = "%Y %b %d %H:%M")

ggplot(b2, aes(x = datetime, y = temp, group = 1)) +
  geom_line(color = "blue") +
  scale_x_datetime(date_breaks = "5 hours", date_labels = "%b %d %H:%M") +
  scale_y_continuous(breaks = seq(floor(min(b2$temp)), ceiling(max(b2$temp)), by = 0.5)) +
  labs(x = "", y = " ", title = "Temperature of Beavers Over Time") 


```


### Combine both of the dataframes
```{r}

b1$data.frame <- "beaver1"
b2$data.frame <- "beaver2"
beavers <- rbind(b1, b2)

```

### Final Plot
```{r}
ggplot(beavers) +
  geom_line(aes(x = datetime, y = temp, color = data.frame, group=2)) +
  scale_x_datetime(date_breaks = "5 hours", date_labels = "%b %d %H:%M") +
  scale_y_continuous(breaks = seq(floor(min(b1$temp)), ceiling(max(b1$temp)), by = 0.5)) +
  labs(x = " ", y = "Temperature (°C)", title = "Temperature of Beavers Over Time") +
  theme_minimal() +
  theme(legend.position = "right") +
  scale_color_manual(values = c("red", "blue"), labels = c("beaver1", "beaver2")) +
  facet_wrap(~data.frame, scales = "free_x", nrow = 1) + theme_gray()

```

## Task 2

### Function
```{r}
convert.all <-\(amounts, toCurrency = "EUR"){
  convertRate <- c(EUR = 1, datasets::euro)
  amountsDF <- tibble::enframe(amounts, name = "currency", value = "amount")
  
  converted <- amountsDF %>%
    dplyr::filter(currency %in% names(convertRate)) %>%
    dplyr::mutate(amountEur = amount / convertRate[currency])
  
  totalEur <- sum(converted$amountEur)
  
  if (toCurrency == "EUR"){
    total <- totalEur
  }else{
    if (toCurrency %in% names(convertRate)){
      total <- totalEur * convertRate[toCurrency]
    }else{
      total <- 0
    }
  }
  
  return(total)
}
```


### Testing
```{r}
convert.all(c(EUR=6.5))
convert.all(c(EUR=3,ATS=2))
convert.all(c(EUR=3,EUR=2))
convert.all(c(EUR=3,DEM=2,SIT=10000))
convert.all(c(EUR=3,DEM=2,SIT=10000),"EUR")
convert.all(c(EUR=3,SIT=10000,DEM=2),"ESP")
convert.all(c(EUR=3,DEM=2,LIRA=100),"SIT")



```

